name: CMake with OpenMPI, GTest and OpenBlas

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

env:
  BUILD_TYPE: Release
  MPI_PROCESSES: 2  # Adjust as needed for parallel execution
  BLAS_LIB: blas64

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies (CMake, OpenMPI, OpenBLAS, GoogleTest)
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential \
            openmpi-bin libopenmpi-dev \
            libopenblas64-dev \
            libopenblas-dev
        cmake --version

    - name: Verify pkg-config paths
      run: |
        echo "Checking available packages..."
        pkg-config --list-all
        echo "Checking OpenBLAS package..."
        pkg-config --modversion ${{env.BLAS_LIB}}
        echo "Checking OpenMPI package..."
        pkg-config --modversion mpi

    - name: Configure CMake using pkg-config
      run: |
        cmake -B ${{github.workspace}}/build \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DCMAKE_C_FLAGS="$(pkg-config --cflags ${{env.BLAS_LIB}} mpi)" \
          -DCMAKE_CXX_FLAGS="$(pkg-config --cflags ${{env.BLAS_LIB}} mpi)" \
          -DCMAKE_EXE_LINKER_FLAGS="$(pkg-config --libs ${{env.BLAS_LIB}} mpi)"

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: built-project
        path: ${{ github.workspace }}/build
        retention-days: 5

  test:
    runs-on: ubuntu-latest
    needs: build  # Ensure build job completes first

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: built-project
        path: ${{ github.workspace }}/build

    - name: Set Execute Permissions for Test Binaries
      run: chmod +x ${{ github.workspace }}/build/test/*

    - name: Verify File Permissions
      run: ls -l ${{ github.workspace }}/build/test

    - name: Check Missing Dependencies
      run: ldd ${{ github.workspace }}/build/test/MPI_SYRK_test || true

    - name: Run Tests with GTest
      working-directory: ${{github.workspace}}/build/test
      run: |
        set -e  # Exit on first failure
        # Run tests
        # mpiexec -np ${{env.MPI_PROCESSES}} ctest -C ${{env.BUILD_TYPE}}
        ctest --rerun-failed --output-on-failure -C ${{env.BUILD_TYPE}}

    - name: Output LastTest.log
      run: cat ${{ github.workspace }}/build/test/Testing/Temporary/LastTest.log

